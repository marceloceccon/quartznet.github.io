(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{451:function(t,e,s){"use strict";s.r(e);var a=s(26),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Like jobs, triggers are relatively easy to work with, but do contain a variety of customizable options that you need to\nbe aware of and understand before you can make full use of Quartz.NET. Also, as noted earlier, there are different types of triggers,\nthat you can select to meet different scheduling needs.")]),t._v(" "),s("h2",{attrs:{id:"calendars"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#calendars"}},[t._v("#")]),t._v(" Calendars")]),t._v(" "),s("p",[t._v("Quartz Calendar objects can be associated with triggers at the time the trigger is stored in the scheduler.\nCalendars are useful for excluding blocks of time from the the trigger's firing schedule. For instance, you could\ncreate a trigger that fires a job every weekday at 9:30 am, but then add a Calendar that excludes all of the business's holidays.")]),t._v(" "),s("p",[t._v("Calendar's can be any serializable objects that implement the ICalendar interface, which looks like this:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("namespace Quartz\n{\n    public interface ICalendar\n    {\n        string Description { get; set; }\n\n        ICalendar CalendarBase { set; get; }\n\n        bool IsTimeIncluded(DateTime timeUtc);\n\n        DateTime GetNextIncludedTimeUtc(DateTime timeUtc);\n    }\n} \n")])])]),s("p",[t._v("Notice that the parameters to these methods are of the long type. As you may guess, they are timestamps in millisecond format.\nThis means that calendars can 'block out' sections of time as narrow as a millisecond. Most likely, you'll be interested in\n'blocking-out' entire days. As a convenience, Quartz includes the class HolidayCalendar, which does just that.")]),t._v(" "),s("p",[t._v("Calendars must be instantiated and registered with the scheduler via the AddCalendar(..) method. If you use HolidayCalendar,\nafter instantiating it, you should use its AddExcludedDate(DateTime date) method in order to populate it with the days you wish\nto have excluded from scheduling. The same calendar instance can be used with multiple triggers such as this:")]),t._v(" "),s("p",[s("strong",[t._v("Using Calendars")])]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HolidayCalendar")]),t._v(" cal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("HolidayCalendar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddExcludedDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someDate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    sched"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddCalendar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myHolidays"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fire every one hour interval")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trigger")]),t._v(" trigger "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TriggerUtils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MakeHourlyTrigger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start on the next even hour")]),t._v("\n    trigger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StartTimeUtc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TriggerUtils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetEvenHourDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DateTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    trigger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myTrigger1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    trigger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CalendarName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myHolidays"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .. schedule job with trigger")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fire every day at 08:00")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trigger")]),t._v(" trigger2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TriggerUtils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MakeDailyTrigger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// begin immediately")]),t._v("\n    trigger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StartTimeUtc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DateTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UtcNow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    trigger2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myTrigger2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    trigger2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CalendarName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myHolidays"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .. schedule job with trigger2 ")]),t._v("\n")])])]),s("p",[t._v("The details of the values passed in the SimpleTrigger constructors will be explained in the next section.\nFor now, just believe that the code above creates two triggers: one that will repeat every 60 seconds forever, and one that\nwill repeat five times with a five day interval between firings. However, any of the firings that would have\noccurred during the period excluded by the calendar will be skipped.")]),t._v(" "),s("h2",{attrs:{id:"priority"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#priority"}},[t._v("#")]),t._v(" Priority")]),t._v(" "),s("p",[t._v("Sometimes, when you have many Triggers (or few worker threads in your Quartz.NET thread pool), Quartz.NET may not have enough resources to\nimmediately fire all of the Triggers that are scheduled to fire at the same time.  In this case, you may want to control\nwhich of your Triggers get first crack at the available Quartz.NET worker threads.  For this purpose, you can set the priority property on a Trigger.\nIf N Triggers are to fire at the same time, but there are only Z worker threads currently available, then the first Z Triggers with the highest priority will get first dibs.\nIf you do not set a priority on a Trigger, then it will use the default priority of 5.\nAny integer value is allowed for priority, positive or negative.")]),t._v(" "),s("p",[t._v("Note: When a Trigger is detected to require recovery, its recovery is scheduled with the same priority as the original Trigger.")]),t._v(" "),s("p",[s("strong",[t._v("Priority Example")])]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// All three Triggers will be scheduled to fire 5 minutes from now.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DateTime")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DateTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UtcNow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddMinutes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trigger")]),t._v(" trig1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("SimpleTrigger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"T1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyGroup"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trigger")]),t._v(" trig2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("SimpleTrigger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"T2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyGroup"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trigger")]),t._v(" trig3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("SimpleTrigger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"T3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyGroup"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JobDetail")]),t._v(" jobDetail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("JobDetail")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyJob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyGroup"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("NoOpJob")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Trigger1 does not have its priority set, so it defaults to 5")]),t._v("\n    sched"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ScheduleJob")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jobDetail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" trig1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Trigger2 has its priority set to 10")]),t._v("\n    trig2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("JobName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jobDetail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    trig2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Priority "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sched"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ScheduleJob")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trig2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Trigger2 has its priority set to 1")]),t._v("\n    trig3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("JobName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jobDetail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    trig3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Priority "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sched"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ScheduleJob")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trig3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Five minutes from now, when the scheduler invokes these three triggers")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// they will be allocated worker threads in decreasing order of their")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// priority: Trigger2(10), Trigger1(5), Trigger3(1) ")]),t._v("\n")])])]),s("h2",{attrs:{id:"misfire-instructions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#misfire-instructions"}},[t._v("#")]),t._v(" Misfire Instructions")]),t._v(" "),s("p",[t._v('Another important property of a Trigger is its "misfire instruction". A misfire occurs if a persistent trigger "misses"\nits firing time because of the scheduler being shutdown, or because there are no available threads in Quartz\'s thread pool for executing the job.\nThe different trigger types have different misfire instructions available to them. By default they use a \'smart policy\' instruction')]),t._v(" "),s("ul",[s("li",[t._v("which has dynamic behavior based on trigger type and configuration. When the scheduler starts, it searches for any persistent triggers that\nhave misfired, and it then updates each of them based on their individually configured misfire instructions.")])]),t._v(" "),s("p",[t._v("When you start using Quartz in your\nown projects, you should make yourself familiar with the misfire instructions that are defined on the given trigger types,\nand explained in their API documentation. More specific information about misfire instructions will be given within\nthe tutorial lessons specific to each trigger type. The misfire instruction for a given trigger instance can be configured\nusing the MisfireInstruction property.")]),t._v(" "),s("h2",{attrs:{id:"triggerutils-triggers-made-easy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#triggerutils-triggers-made-easy"}},[t._v("#")]),t._v(" TriggerUtils - Triggers Made Easy")]),t._v(" "),s("p",[t._v("The TriggerUtils class contains conveniences to help you create triggers and dates without\nhaving to monkey around with DateTime objects. Use this class to easily make triggers that fire every minute,\nhour, day, week, month, etc. Also use this class to generate dates that are rounded to the nearest second, minute or hour -\nthis can be very useful for setting trigger start-times.")]),t._v(" "),s("h2",{attrs:{id:"trigger-listeners"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#trigger-listeners"}},[t._v("#")]),t._v(" Trigger Listeners")]),t._v(" "),s("p",[t._v("Finally, triggers may have registered listeners, just as jobs may.\nObjects implementing the ITriggerListener interface will receive notifications as a trigger is fired.")])])}),[],!1,null,null,null);e.default=n.exports}}]);